{
  "name": "RTCIceCandidate",
  "description": "",
  "members": [
    {
      "name": "RTCIceCandidate()",
      "link": "/en-US/docs/Web/API/RTCIceCandidate/RTCIceCandidate",
      "description": "Creates an RTCIceCandidate object."
    },
    {
      "name": "RTCIceCandidate.candidate",
      "link": "/en-US/docs/Web/API/RTCIceCandidate/candidate",
      "description": "A DOMString representing the transport address for the candidate that can be used for connectivity checks. The format of this address is a candidate-attribute as defined in RFC 5245. This string is empty (\"\") if the RTCIceCandidate represents a \"end of candidates\" indicator."
    },
    {
      "name": "RTCIceCandidate.foundation",
      "link": "/en-US/docs/Web/API/RTCIceCandidate/foundation",
      "description": "Returns a unique identifier that allows ICE to correlate candidates that appear on multiple RTCIceTransport objects."
    },
    {
      "name": "RTCIceCandidate.ip",
      "link": "/en-US/docs/Web/API/RTCIceCandidate/ip",
      "description": "Returns the IP address of the candidate."
    },
    {
      "name": "RTCIceCandidate.port",
      "link": "/en-US/docs/Web/API/RTCIceCandidate/port",
      "description": "Returns the port of the candidate."
    },
    {
      "name": "RTCIceCandidate.priority",
      "link": "/en-US/docs/Web/API/RTCIceCandidate/priority",
      "description": "Returns the assigned priority of the candidate."
    },
    {
      "name": "RTCIceCandidate.protocol",
      "link": "/en-US/docs/Web/API/RTCIceCandidate/protocol",
      "description": "Returns the protocol used by the candidate, either udp or tcp."
    },
    {
      "name": "RTCIceCandidate.relatedAddress",
      "link": "/en-US/docs/Web/API/RTCIceCandidate/relatedAddress",
      "description": "For a candidate that is derived from another, such as a relay or reflexive candidate, the relatedAddress is the IP address of the candidate that it is derived from. For host candidates, the relatedAddress is null."
    },
    {
      "name": "RTCIceCandidate.relatedPort",
      "link": "/en-US/docs/Web/API/RTCIceCandidate/relatedPort",
      "description": "For a candidate that is derived from another, such as a relay or reflexive candidate, the relatedPort is the port of the candidate that it is derived from. For host candidates, the relatedPort is null."
    },
    {
      "name": "RTCIceCandidate.sdpMid",
      "link": "/en-US/docs/Web/API/RTCIceCandidate/sdpMid",
      "description": "If not null, this contains the identifier of the \"media stream identification\" (as defined in RFC 5888) for the media component this candidate is associated with."
    },
    {
      "name": "RTCIceCandidate.sdpMLineIndex",
      "link": "/en-US/docs/Web/API/RTCIceCandidate/sdpMLineIndex",
      "description": "If not null, this indicates the index (starting at zero) of the media description (as defined in RFC 4566) in the SDP this candidate is associated with."
    },
    {
      "name": "RTCIceCandidate.tcpType",
      "link": "/en-US/docs/Web/API/RTCIceCandidate/tcpType",
      "description": "If protocol is tcp, tcpType represents the type of TCP candidate. Otherwise, tcpType is null."
    },
    {
      "name": "RTCIceCandidate.type",
      "link": "/en-US/docs/Web/API/RTCIceCandidate/type",
      "description": "One of host, srflx, prflx, or relay."
    }
  ]
}