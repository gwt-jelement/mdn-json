{
  "name": "WEBGL_draw_buffers",
  "description": "The WEBGL_draw_buffers extension is part of the WebGL API and enables a fragment shader to write to several textures, which is useful for deferred shading, for example.",
  "members": [
    {
      "name": "ext.drawBuffersWEBGL()",
      "link": "/en-US/docs/Web/API/WEBGL_draw_buffers/drawBuffersWEBGL",
      "description": "Defines the draw buffers to which all fragment colors are written. (When using WebGL2, this method is available as gl.drawBuffers() by default).",
      "parameters": [
        {
          "name": "buffers",
          "description": "An Array of GLenum constants defining drawing buffers. Possible values: gl.NONE: The fragment shader is not written to any color buffer. gl.BACK: The fragment shader is written to the back color buffer. ext.COLOR_ATTACHMENT0_WEBGL The fragment shader is written the the nth color attachment of the framebuffer. ext.COLOR_ATTACHMENT1_WEBGL ext.COLOR_ATTACHMENT2_WEBGL ext.COLOR_ATTACHMENT3_WEBGL ext.COLOR_ATTACHMENT4_WEBGL ext.COLOR_ATTACHMENT5_WEBGL ext.COLOR_ATTACHMENT6_WEBGL ext.COLOR_ATTACHMENT7_WEBGL ext.COLOR_ATTACHMENT8_WEBGL ext.COLOR_ATTACHMENT9_WEBGL ext.COLOR_ATTACHMENT10_WEBGL ext.COLOR_ATTACHMENT11_WEBGL ext.COLOR_ATTACHMENT12_WEBGL ext.COLOR_ATTACHMENT13_WEBGL ext.COLOR_ATTACHMENT14_WEBGL ext.COLOR_ATTACHMENT15_WEBGL"
        }
      ]
    }
  ]
}