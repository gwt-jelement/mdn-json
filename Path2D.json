{
  "name": "Path2D",
  "description": "This is an experimental technology Because this technology\u0027s specification has not stabilized, check the compatibility table for usage in various browsers. Also note that the syntax and behavior of an experimental technology is subject to change in future versions of browsers as the specification changes. The Path2D interface of the Canvas 2D API is used to declare paths that are then later used on CanvasRenderingContext2D objects. The path methods of the CanvasRenderingContext2D interface are present on this interface as well and are allowing you to create paths that you can retain and replay as required on a canvas.",
  "members": [
    {
      "name": "Path2D()",
      "link": "/en-US/docs/Web/API/Path2D/Path2D",
      "description": "Path2D constructor. Creates a new Path2D object.",
      "parameters": [
        {
          "name": "path Optional",
          "description": "When invoked with another Path2D object, a copy of the path argument is created."
        },
        {
          "name": "d Optional",
          "description": "When invoked with a string consisting of SVG path data, a new path is created from that description."
        }
      ]
    },
    {
      "name": "Path2D.addPath()",
      "link": "/en-US/docs/Web/API/Path2D/addPath",
      "description": "Adds a path to the current path.",
      "parameters": [
        {
          "name": "path",
          "description": "A Path2D path to add."
        },
        {
          "name": "transform Optional",
          "description": "An SVGMatrix to be used as the transformation matrix for the path that is added."
        }
      ]
    },
    {
      "name": "Path2D.closePath()",
      "link": "/en-US/docs/Web/API/CanvasRenderingContext2D/closePath",
      "description": "Causes the point of the pen to move back to the start of the current sub-path. It tries to draw a straight line from the current point to the start. If the shape has already been closed or has only one point, this function does nothing."
    },
    {
      "name": "Path2D.moveTo()",
      "link": "/en-US/docs/Web/API/CanvasRenderingContext2D/moveTo",
      "description": "Moves the starting point of a new sub-path to the (x, y) coordinates.",
      "parameters": [
        {
          "name": "x",
          "description": "The x axis of the point."
        },
        {
          "name": "y",
          "description": "The y axis of the point."
        }
      ]
    },
    {
      "name": "Path2D.lineTo()",
      "link": "/en-US/docs/Web/API/CanvasRenderingContext2D/lineTo",
      "description": "Connects the last point in the subpath to the x, y coordinates with a straight line.",
      "parameters": [
        {
          "name": "x",
          "description": "The x axis of the coordinate for the end of the line."
        },
        {
          "name": "y",
          "description": "The y axis of the coordinate for the end of the line."
        }
      ]
    },
    {
      "name": "Path2D.bezierCurveTo()",
      "link": "/en-US/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo",
      "description": "Adds a cubic Bézier curve to the path. It requires three points. The first two points are control points and the third one is the end point. The starting point is the last point in the current path, which can be changed using moveTo() before creating the Bézier curve.",
      "parameters": [
        {
          "name": "cp1x",
          "description": "The x axis of the coordinate for the first control point."
        },
        {
          "name": "cp1y",
          "description": "The y axis of the coordinate for first control point."
        },
        {
          "name": "cp2x",
          "description": "The x axis of the coordinate for the second control point."
        },
        {
          "name": "cp2y",
          "description": "The y axis of the coordinate for the second control point."
        },
        {
          "name": "x",
          "description": "The x axis of the coordinate for the end point."
        },
        {
          "name": "y",
          "description": "The y axis of the coordinate for the end point."
        }
      ]
    },
    {
      "name": "Path2D.quadraticCurveTo()",
      "link": "/en-US/docs/Web/API/CanvasRenderingContext2D/quadraticCurveTo",
      "description": "Adds a quadratic Bézier curve to the current path.",
      "parameters": [
        {
          "name": "cpx",
          "description": "The x axis of the coordinate for the control point."
        },
        {
          "name": "cpy",
          "description": "The y axis of the coordinate for the control point."
        },
        {
          "name": "x",
          "description": "The x axis of the coordinate for the end point."
        },
        {
          "name": "y",
          "description": "The y axis of the coordinate for the end point."
        }
      ]
    },
    {
      "name": "Path2D.arc()",
      "link": "/en-US/docs/Web/API/CanvasRenderingContext2D/arc",
      "description": "Adds an arc to the path which is centered at (x, y) position with radius r starting at startAngle and ending at endAngle going in the given direction by anticlockwise (defaulting to clockwise).",
      "parameters": [
        {
          "name": "x",
          "description": "The x coordinate of the arc\u0027s center."
        },
        {
          "name": "y",
          "description": "The y coordinate of the arc\u0027s center."
        },
        {
          "name": "radius",
          "description": "The arc\u0027s radius."
        },
        {
          "name": "startAngle",
          "description": "The angle at which the arc starts, measured clockwise from the positive x axis and expressed in radians."
        },
        {
          "name": "endAngle",
          "description": "The angle at which the arc ends, measured clockwise from the positive x axis and expressed in radians."
        },
        {
          "name": "anticlockwise Optional",
          "description": "An optional Boolean which, if true, causes the arc to be drawn counter-clockwise between the two angles. By default it is drawn clockwise."
        }
      ]
    },
    {
      "name": "Path2D.arcTo()",
      "link": "/en-US/docs/Web/API/CanvasRenderingContext2D/arcTo",
      "description": "Adds an arc to the path with the given control points and radius, connected to the previous point by a straight line.",
      "parameters": [
        {
          "name": "x1",
          "description": "The x axis of the coordinate for the first control point."
        },
        {
          "name": "y1",
          "description": "The y axis of the coordinate for the first control point."
        },
        {
          "name": "x2",
          "description": "The x axis of the coordinate for the second control point."
        },
        {
          "name": "y2",
          "description": "The y axis of the coordinate for the second control point."
        },
        {
          "name": "radius",
          "description": "The arc\u0027s radius."
        }
      ]
    },
    {
      "name": "Path2D.ellipse()",
      "link": "/en-US/docs/Web/API/CanvasRenderingContext2D/ellipse",
      "description": "Adds an ellipse to the path which is centered at (x, y) position with the radii radiusX and radiusY starting at startAngle and ending at endAngle going in the given direction by anticlockwise (defaulting to clockwise).",
      "parameters": [
        {
          "name": "x",
          "description": "The x axis of the coordinate for the ellipse\u0027s center."
        },
        {
          "name": "y",
          "description": "The y axis of the coordinate for the ellipse\u0027s center."
        },
        {
          "name": "radiusX",
          "description": "The ellipse\u0027s major-axis radius."
        },
        {
          "name": "radiusY",
          "description": "The ellipse\u0027s minor-axis radius."
        },
        {
          "name": "rotation",
          "description": "The rotation for this ellipse, expressed in radians."
        },
        {
          "name": "startAngle",
          "description": "The starting point, measured from the x axis, from which it will be drawn, expressed in radians."
        },
        {
          "name": "endAngle",
          "description": "The end ellipse\u0027s angle to which it will be drawn, expressed in radians."
        },
        {
          "name": "anticlockwise Optional",
          "description": "An optional Boolean which, if true, draws the ellipse anticlockwise (counter-clockwise), otherwise in a clockwise direction."
        }
      ]
    },
    {
      "name": "Path2D.rect()",
      "link": "/en-US/docs/Web/API/CanvasRenderingContext2D/rect",
      "description": "Creates a path for a rectangle at position (x, y) with a size that is determined by width and height.",
      "parameters": [
        {
          "name": "x",
          "description": "The x axis of the coordinate for the rectangle starting point."
        },
        {
          "name": "y",
          "description": "The y axis of the coordinate for the rectangle starting point."
        },
        {
          "name": "width",
          "description": "The rectangle\u0027s width."
        },
        {
          "name": "height",
          "description": "The rectangle\u0027s height."
        }
      ]
    }
  ]
}