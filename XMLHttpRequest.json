{
  "name": "XMLHttpRequest",
  "description": "Use XMLHttpRequest objects to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing.  XMLHttpRequest is used heavily in Ajax programming.",
  "members": [
    {
      "name": "XMLHttpRequest()",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/XMLHttpRequest",
      "description": "The constructor initializes an XMLHttpRequest. It must be called before any other method calls.",
      "parameters": [
        {
          "name": "objParameters",
          "description": "There are two flags you can set: mozAnon Boolean: Setting this flag to true will cause the browser not to expose the origin and user credentials when fetching resources. Most important, this means that cookies will not be sent unless explicitly added using setRequestHeader. mozSystem Boolean: Setting this flag to true allows making cross-site connections without requiring the server to opt-in using CORS. Requires setting mozAnon: true, i.e. this can\u0027t be combined with sending cookies or other user credentials. This only works in privileged (reviewed) apps; it does not work on arbitrary webpages loaded in Firefox."
        },
        {
          "name": "mozAnon",
          "description": "Boolean: Setting this flag to true will cause the browser not to expose the origin and user credentials when fetching resources. Most important, this means that cookies will not be sent unless explicitly added using setRequestHeader."
        },
        {
          "name": "mozSystem",
          "description": "Boolean: Setting this flag to true allows making cross-site connections without requiring the server to opt-in using CORS. Requires setting mozAnon: true, i.e. this can\u0027t be combined with sending cookies or other user credentials. This only works in privileged (reviewed) apps; it does not work on arbitrary webpages loaded in Firefox."
        }
      ]
    },
    {
      "name": "XMLHttpRequest.onreadystatechange",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/onreadystatechange",
      "description": "An EventHandler that is called whenever the readyState attribute changes."
    },
    {
      "name": "XMLHttpRequest.readyState",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/readyState",
      "description": "Returns an unsigned short, the state of the request.",
      "parameters": [
        {
          "name": "UNSENT",
          "description": "The XMLHttpRequest client has been created, but the open() method hasn\u0027t been called yet."
        },
        {
          "name": "OPENED",
          "description": "open() method has been invoked. During this state, the request headers can be set using the setRequestHeader() method and the send() method can be called which will initiate the fetch."
        },
        {
          "name": "HEADERS_RECEIVED",
          "description": "send() has been called and the response headers have been received."
        },
        {
          "name": "LOADING",
          "description": "Response\u0027s body is being received. If responseType is \"text\" or empty string, responseText will have the partial text response as it loads."
        },
        {
          "name": "DONE",
          "description": "The fetch operation is complete. This could mean that either the data transfer has been completed successfully or failed."
        }
      ]
    },
    {
      "name": "XMLHttpRequest.response",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/response",
      "description": "Returns an ArrayBuffer, Blob, Document, JavaScript object, or a DOMString, depending on the value of XMLHttpRequest.responseType. that contains the response entity body."
    },
    {
      "name": "XMLHttpRequest.responseText",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/responseText",
      "description": "Returns a DOMString that contains the response to the request as text, or null if the request was unsuccessful or has not yet been sent."
    },
    {
      "name": "XMLHttpRequest.responseType",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/responseType",
      "description": "Is an enumerated value that defines the response type."
    },
    {
      "name": "XMLHttpRequest.responseURL",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/responseURL",
      "description": "Returns the serialized URL of the response or the empty string if the URL is null."
    },
    {
      "name": "XMLHttpRequest.responseXML",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/responseXML",
      "description": "Returns a Document containing the response to the request, or null if the request was unsuccessful, has not yet been sent, or cannot be parsed as XML or HTML.",
      "parameters": [
        {
          "name": "InvalidStateError",
          "description": "The responseType isn\u0027t either \"document\" or an empty string (either of which indicates that the received data is XML or HTML)."
        }
      ]
    },
    {
      "name": "XMLHttpRequest.status",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/status",
      "description": "Returns an unsigned short with the status of the response of the request."
    },
    {
      "name": "XMLHttpRequest.statusText",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/statusText",
      "description": "Returns a DOMString containing the response string returned by the HTTP server. Unlike XMLHTTPRequest.status, this includes the entire text of the response message (\"200 OK\", for example)."
    },
    {
      "name": "XMLHttpRequest.timeout",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/timeout",
      "description": "Is an unsigned long representing the number of milliseconds a request can take before automatically being terminated."
    },
    {
      "name": "XMLHttpRequestEventTarget.ontimeout",
      "link": "/en-US/docs/Web/API/XMLHttpRequestEventTarget/ontimeout",
      "description": "Is an EventHandler that is called whenever the request times out."
    },
    {
      "name": "XMLHttpRequest.upload",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/upload",
      "description": "Is an XMLHttpRequestUpload, representing the upload process."
    },
    {
      "name": "XMLHttpRequest.withCredentials",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/withCredentials",
      "description": "Is a Boolean that indicates whether or not cross-site Access-Control requests should be made using credentials such as cookies or authorization headers."
    },
    {
      "name": "XMLHttpRequest.channel",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/channel",
      "description": "Is a nsIChannel. The channel used by the object when performing the request."
    },
    {
      "name": "XMLHttpRequest.mozAnon",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/mozAnon",
      "description": "Is a boolean. If true, the request will be sent without cookie and authentication headers."
    },
    {
      "name": "XMLHttpRequest.mozSystem",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/mozSystem",
      "description": "Is a boolean. If true, the same origin policy will not be enforced on the request."
    },
    {
      "name": "XMLHttpRequest.mozBackgroundRequest",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/mozBackgroundRequest",
      "description": "Is a boolean. It indicates whether or not the object represents a background service request."
    },
    {
      "name": "XMLHttpRequest.mozResponseArrayBuffer",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/mozResponseArrayBuffer",
      "description": "Is an ArrayBuffer. The response to the request, as a JavaScript typed array."
    },
    {
      "name": "XMLHttpRequest.multipart",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/multipart",
      "description": "This Gecko-only feature, a boolean, was removed in Firefox/Gecko 22. Please use Server-Sent Events, Web Sockets, or responseText from progress events instead."
    },
    {
      "name": "XMLHttpRequest.abort()",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/abort",
      "description": "Aborts the request if it has already been sent."
    },
    {
      "name": "XMLHttpRequest.getAllResponseHeaders()",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders",
      "description": "Returns all the response headers, separated by CRLF, as a string, or null if no response has been received."
    },
    {
      "name": "XMLHttpRequest.getResponseHeader()",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/getResponseHeader",
      "description": "Returns the string containing the text of the specified header, or null if either the response has not yet been received or the header doesn\u0027t exist in the response.",
      "parameters": [
        {
          "name": "name",
          "description": "A ByteString representing the name of the header you want to return the text value of."
        }
      ]
    },
    {
      "name": "XMLHttpRequest.open()",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/open",
      "description": "Initializes a request. This method is to be used from JavaScript code; to initialize a request from native code, use openRequest() instead.",
      "parameters": [
        {
          "name": "method",
          "description": "The HTTP method to use, such as \"GET\", \"POST\", \"PUT\", \"DELETE\", etc. Ignored for non-HTTP(S) URLs."
        },
        {
          "name": "url",
          "description": "A DOMString representing the URL to send the request to."
        },
        {
          "name": "async Optional",
          "description": "An optional Boolean parameter, defaulting to true, indicating whether or not to perform the operation asynchronously. If this value is false, the send()method does not return until the response is received. If true, notification of a completed transaction is provided using event listeners. This must be true if the multipart attribute is true, or an exception will be thrown. Note: Starting with Gecko 30.0 (Firefox 30.0 / Thunderbird 30.0 / SeaMonkey 2.27), synchronous requests on the main thread have been deprecated due to the negative effects to the user experience."
        },
        {
          "name": "user Optional",
          "description": "The optional user name to use for authentication purposes; by default, this is the null value."
        },
        {
          "name": "password Optional",
          "description": "The optional password to use for authentication purposes; by default, this is the null value."
        }
      ]
    },
    {
      "name": "XMLHttpRequest.overrideMimeType()",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/overrideMimeType",
      "description": "Overrides the MIME type returned by the server."
    },
    {
      "name": "XMLHttpRequest.send()",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/send",
      "description": "Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent."
    },
    {
      "name": "XMLHttpRequest.setRequestHeader()",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader",
      "description": "Sets the value of an HTTP request header. You must call setRequestHeader()after open(), but before send().",
      "parameters": [
        {
          "name": "header",
          "description": "The name of the header whose value is to be set."
        },
        {
          "name": "value",
          "description": "The value to set as the body of the header."
        }
      ]
    },
    {
      "name": "XMLHttpRequest.init()",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/init",
      "description": "Initializes the object for use from C++ code."
    },
    {
      "name": "XMLHttpRequest.openRequest()",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/openRequest",
      "description": "Initializes a request. This method is to be used from native code; to initialize a request from JavaScript code, use open() instead. See the documentation for open()."
    },
    {
      "name": "XMLHttpRequest.sendAsBinary()",
      "link": "/en-US/docs/Web/API/XMLHttpRequest/sendAsBinary",
      "description": "A variant of the send() method that sends binary data.",
      "parameters": [
        {
          "name": "body",
          "description": "The request body as a DOMstring. This data is converted to a string of single-byte characters by truncation (removing the high-order byte of each character)."
        }
      ]
    }
  ]
}