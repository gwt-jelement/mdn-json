{
  "name": "OffscreenCanvas",
  "description": "This is an experimental technology Because this technology\u0027s specification has not stabilized, check the compatibility table for usage in various browsers. Also note that the syntax and behavior of an experimental technology is subject to change in future versions of browsers as the specification changes. The OffscreenCanvas interface provides a canvas that can be rendered off screen. It is available in both the window and worker contexts.",
  "members": [
    {
      "name": "OffscreenCanvas()",
      "link": "/en-US/docs/Web/API/OffscreenCanvas/OffscreenCanvas",
      "description": "OffscreenCanvas constructor. Creates a new OffscreenCanvas object.",
      "parameters": [
        {
          "name": "width",
          "description": "The height of the offscreen canvas."
        },
        {
          "name": "height",
          "description": "The width of the offscreen canvas."
        }
      ]
    },
    {
      "name": "OffscreenCanvas.height",
      "link": "/en-US/docs/Web/API/OffscreenCanvas/height",
      "description": "The height of the offscreen canvas."
    },
    {
      "name": "OffscreenCanvas.width",
      "link": "/en-US/docs/Web/API/OffscreenCanvas/width",
      "description": "The width of the offscreen canvas."
    },
    {
      "name": "OffscreenCanvas.getContext()",
      "link": "/en-US/docs/Web/API/OffscreenCanvas/getContext",
      "description": "Returns a rendering context for the offscreen canvas.",
      "parameters": [
        {
          "name": "contextType",
          "description": "Is a DOMString containing the context identifier defining the drawing context associated to the canvas. Possible values are: \"2d\", leading to the creation of a CanvasRenderingContext2D object representing a two-dimensional rendering context. \"webgl\" which will create a WebGLRenderingContext object representing a three-dimensional rendering context. This context is only available on browsers that implement WebGL version 1 (OpenGL ES 2.0). \"webgl2\" which will create a WebGL2RenderingContext object representing a three-dimensional rendering context. This context is only available on browsers that implement WebGL version 2 (OpenGL ES 3.0). \"bitmaprenderer\" which will create a ImageBitmapRenderingContext which only provides functionality to replace the content of the canvas with a given ImageBitmap. Note: The identifiers \"experimental-webgl\" or \"experimental-webgl2\" are also used in implementations of WebGL. These implementation have not reached test suite conformance or the graphic drivers situation on the platform is not yet stable. The Khronos Group certifies WebGL implementations under certain conformance rules."
        },
        {
          "name": "contextAttributes",
          "description": "You can use several context attributes when creating your rendering context, for example: offscreen.getContext(\"webgl\", \n                 { antialias: false,\n                   depth: false }); 2d context attributes: alpha: Boolean that indicates if the canvas contains an alpha channel. If set to false, the browser now knows that the backdrop is always opaque, which can speed up drawing of transparent content and images then. (Gecko only) willReadFrequently: Boolean that indicates whether or not a lot of read-back operations are planned. This will force the use of a software (instead of hardware accelerated) 2D canvas and can save memory when calling getImageData() frequently. This option is only available, if the flag gfx.canvas.willReadFrequently.enable is set to true (which, by default, is only the case for B2G/Firefox OS). (Blink only) storage: String that indicates which storage is used (\"persistent\" by default). WebGL context attributes: alpha: Boolean that indicates if the canvas contains an alpha buffer. depth: Boolean that indicates that the drawing buffer has a depth buffer of at least 16 bits. stencil: Boolean that indicates that the drawing buffer has a stencil buffer of at least 8 bits. antialias: Boolean that indicates whether or not to perform anti-aliasing. premultipliedAlpha: Boolean that indicates that the page compositor will assume the drawing buffer contains colors with pre-multiplied alpha. preserveDrawingBuffer: If the value is true the buffers will not be cleared and will preserve their values until cleared or overwritten by the author. failIfMajorPerformanceCaveat: Boolean that indicates if a context will be created if the system performance is low."
        }
      ]
    },
    {
      "name": "OffscreenCanvas.toBlob()",
      "link": "/en-US/docs/Web/API/OffscreenCanvas/toBlob",
      "description": "Creates a Blob object representing the image contained in the canvas.",
      "parameters": [
        {
          "name": "type Optional",
          "description": "A DOMString indicating the image format. The default type is image/png."
        },
        {
          "name": "encoderOptions Optional",
          "description": "A Number between 0 and 1 indicating image quality if the requested type is image/jpeg or image/webp. If this argument is anything else, the default value for image quality is used. Other arguments are ignored."
        }
      ]
    },
    {
      "name": "OffscreenCanvas.transferToImageBitmap()",
      "link": "/en-US/docs/Web/API/OffscreenCanvas/transferToImageBitmap",
      "description": "Creates an ImageBitmap object from the most recently rendered image of the OffscreenCanvas."
    }
  ]
}