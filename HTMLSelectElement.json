{
  "name": "HTMLSelectElement",
  "description": "The HTMLSelectElement interface represents a \u003cselect\u003e HTML Element. These elements also share all of the properties and methods of other HTML elements via the HTMLElement interface.",
  "members": [
    {
      "name": "HTMLSelectElement.autofocus",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/autofocus",
      "description": "A Boolean reflecting the autofocus HTML attribute, which indicates whether the control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form-associated element in a document can have this attribute specified."
    },
    {
      "name": "HTMLSelectElement.disabled",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/disabled",
      "description": "A Boolean reflecting the disabled HTML attribute, which indicates whether the control is disabled. If it is disabled, it does not accept clicks."
    },
    {
      "name": "HTMLSelectElement.form",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/form",
      "description": "An HTMLFormElement referencing the form that this element is associated with. If the element is not associated with of a \u003cform\u003e element, then it returns null."
    },
    {
      "name": "HTMLSelectElement.labels",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/labels",
      "description": "A NodeList of \u003clabel\u003e elements associated with the element."
    },
    {
      "name": "HTMLSelectElement.length",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/length",
      "description": "An unsigned long The number of \u003coption\u003e elements in this select element."
    },
    {
      "name": "HTMLSelectElement.multiple",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/multiple",
      "description": "A Boolean reflecting the multiple HTML attribute, which indicates whether multiple items can be selected."
    },
    {
      "name": "HTMLSelectElement.name",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/name",
      "description": "A DOMString reflecting the name HTML attribute, containing the name of this control used by servers and DOM search functions."
    },
    {
      "name": "HTMLSelectElement.options",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/options",
      "description": "An HTMLOptionsCollection representing the set of \u003coption\u003e elements contained by this element."
    },
    {
      "name": "HTMLSelectElement.required",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/required",
      "description": "A Boolean reflecting the required HTML attribute, which indicates whether the user is required to select a value before submitting the form."
    },
    {
      "name": "HTMLSelectElement.selectedIndex",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/selectedIndex",
      "description": "A long reflecting the index of the first selected \u003coption\u003e element. The value -1 indicates no element is selected."
    },
    {
      "name": "HTMLSelectElement.selectedOptions",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/selectedOptions",
      "description": "An HTMLCollection representing the set of \u003coption\u003e elements that are selected."
    },
    {
      "name": "HTMLSelectElement.size",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/size",
      "description": "A long reflecting the size HTML attribute, which contains the number of visible items in the control. The default is 1, unless multiple is true, in which case it is 4."
    },
    {
      "name": "HTMLSelectElement.type",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/type",
      "description": "A DOMString represeting the form control\u0027s type. When multiple is true, it returns \"select-multiple\"; otherwise, it returns \"select-one\"."
    },
    {
      "name": "HTMLSelectElement.validationMessage",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/validationMessage",
      "description": "A DOMString representing a localized message that describes the validation constraints that the control does not satisfy (if any). This attribute is the empty string if the control is not a candidate for constraint validation (willValidate is false), or it satisfies its constraints."
    },
    {
      "name": "HTMLSelectElement.validity",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/validity",
      "description": "A ValidityState reflecting the validity state that this control is in."
    },
    {
      "name": "HTMLSelectElement.value",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/value",
      "description": "A DOMString reflecting the value of the form control (the first selected option)."
    },
    {
      "name": "HTMLSelectElement.willValidate",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/willValidate",
      "description": "A Boolean that indicates whether the button is a candidate for constraint validation. It is false if any conditions bar it from constraint validation."
    },
    {
      "name": "HTMLSelectElement.add()",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/add",
      "description": "Adds an element to the collection of option elements for this select element."
    },
    {
      "name": "HTMLSelectElement.blur()",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/blur",
      "description": "Removes input focus from this element. This method is now implemented on HTMLElement."
    },
    {
      "name": "HTMLSelectElement.checkValidity()",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/checkValidity",
      "description": "Checks whether the element has any constraints and whether it satisfies them. If the element fails its constraints, the browser fires a cancelable invalid event at the element (and returns false)."
    },
    {
      "name": "HTMLSelectElement.focus()",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/focus",
      "description": "Gives input focus to this element. This method is now implemented on HTMLElement."
    },
    {
      "name": "HTMLSelectElement.item()",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/item",
      "description": "Gets an item from the options collection for this \u003cselect\u003e element. You can also access an item by specifying the index in array-style brackets or parentheses, without calling this method explicitly."
    },
    {
      "name": "HTMLSelectElement.namedItem()",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/namedItem",
      "description": "Gets the item in the options collection with the specified name. The name string can match either the id or the name attribute of an option node. You can also access an item by specifying the name in array-style brackets or parentheses, without calling this method explicitly."
    },
    {
      "name": "HTMLSelectElement.remove()",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/remove",
      "description": "Removes the element at the specified index from the options collection for this select element."
    },
    {
      "name": "HTMLSelectElement.setCustomValidity()",
      "link": "/en-US/docs/Web/API/HTMLSelectElement/setCustomValidity",
      "description": "Sets the custom validity message for the selection element to the specified message. Use the empty string to indicate that the element does not have a custom validity error."
    }
  ]
}