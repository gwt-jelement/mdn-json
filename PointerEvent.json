{
  "name": "PointerEvent",
  "description": "",
  "members": [
    {
      "name": "PointerEvent()",
      "link": "/en-US/docs/Web/API/PointerEvent/PointerEvent",
      "description": "Creates a synthetic and untrusted PointerEvent.",
      "parameters": [
        {
          "name": "type",
          "description": "Is a DOMString representing the name of the event (see PointerEvent event types)."
        },
        {
          "name": "PointerEventInitOptional",
          "description": ""
        }
      ]
    },
    {
      "name": "PointerEvent.pointerId",
      "link": "/en-US/docs/Web/API/PointerEvent/pointerId",
      "description": "A unique identifier for the pointer causing the event.",
      "parameters": [
        {
          "name": "id",
          "description": "The pointer event\u0027s unique identifier number."
        }
      ]
    },
    {
      "name": "PointerEvent.width",
      "link": "/en-US/docs/Web/API/PointerEvent/width",
      "description": "The width (magnitude on the X axis), in CSS pixels, of the contact geometry of the pointer.",
      "parameters": [
        {
          "name": "contactWidth",
          "description": "The width of the event\u0027s contact area (in CSS pixels)."
        }
      ]
    },
    {
      "name": "PointerEvent.height",
      "link": "/en-US/docs/Web/API/PointerEvent/height",
      "description": "The height (magnitude on the Y axis), in CSS pixels, of the contact geometry of the pointer.",
      "parameters": [
        {
          "name": "contactHeight",
          "description": "The height of the event\u0027s contact area (in CSS pixels)."
        }
      ]
    },
    {
      "name": "PointerEvent.pressure",
      "link": "/en-US/docs/Web/API/PointerEvent/pressure",
      "description": "The normalized pressure of the pointer input in the range 0 to 1, where 0 and 1 represent the minimum and maximum pressure the hardware is capable of detecting, respectively.",
      "parameters": [
        {
          "name": "pressure",
          "description": "The amount of pressure applied to the pointer."
        }
      ]
    },
    {
      "name": "PointerEvent.tangentialPressure",
      "link": "/en-US/docs/Web/API/PointerEvent/tangentialPressure",
      "description": "The normalized tangential pressure of the pointer input (also known as barrel pressure or cylinder stress) in the range -1 to 1, where 0 is the neutral position of the control."
    },
    {
      "name": "PointerEvent.tiltX",
      "link": "/en-US/docs/Web/API/PointerEvent/tiltX",
      "description": "The plane angle (in degrees, in the range of -90 to 90) between the Y-Z plane and the plane containing both the transducer (e.g. pen stylus) axis and the Y axis.",
      "parameters": [
        {
          "name": "tilt",
          "description": "The angle between the Y-Z plane of the pointer (stylus) and the screen."
        }
      ]
    },
    {
      "name": "PointerEvent.tiltY",
      "link": "/en-US/docs/Web/API/PointerEvent/tiltY",
      "description": "The plane angle (in degrees, in the range of -90 to 90) between the X-Z plane and the plane containing both the transducer (e.g. pen stylus) axis and the X axis.",
      "parameters": [
        {
          "name": "tilt",
          "description": "The angle between the X-Z plane of the pointer (stylus) and the screen."
        }
      ]
    },
    {
      "name": "PointerEvent.twist",
      "link": "/en-US/docs/Web/API/PointerEvent/twist",
      "description": "The clockwise rotation of the transducer (e.g. pen stylus) around its major axis in degrees, with a value in the range 0 to 359."
    },
    {
      "name": "PointerEvent.pointerType",
      "link": "/en-US/docs/Web/API/PointerEvent/pointerType",
      "description": "Indicates the device type that caused the event (mouse, pen, touch, etc.)",
      "parameters": [
        {
          "name": "mouse",
          "description": "The event was generated by a mouse device."
        },
        {
          "name": "pen",
          "description": "The event was generated by a pen or stylus device."
        },
        {
          "name": "touch",
          "description": "The event was generated by a touch such as a finger."
        },
        {
          "name": "pType",
          "description": "The event\u0027s pointer type, either the string mouse, pen or touch."
        }
      ]
    },
    {
      "name": "PointerEvent.isPrimary",
      "link": "/en-US/docs/Web/API/PointerEvent/isPrimary",
      "description": "Indicates if the pointer represents the primary pointer of this pointer type.",
      "parameters": [
        {
          "name": "isPrime",
          "description": "Returns true if the pointer for this event is the primary pointer and returns false otherwise."
        }
      ]
    },
    {
      "name": "PointerEvent.getCoalescedEvents()",
      "link": "/en-US/docs/Web/API/PointerEvent/getCoalescedEvents",
      "description": "Returns a sequence of all PointerEvent instances that were coalesced into the dispatched pointermove event."
    },
    {
      "name": "pointerover",
      "link": "/en-US/docs/Web/Events/pointerover",
      "description": "This event is fired when a pointing device is moved into an element\u0027s hit test boundaries.",
      "parameters": [
        {
          "name": "Specification",
          "description": "Pointer Events"
        },
        {
          "name": "Interface",
          "description": "PointerEvent"
        },
        {
          "name": "Bubbles",
          "description": "Yes"
        },
        {
          "name": "Cancelable",
          "description": "Yes"
        },
        {
          "name": "Target",
          "description": "Document, Element"
        },
        {
          "name": "Default Action",
          "description": "Varies: When the pointer is primary, all default actions of mouseover."
        }
      ]
    },
    {
      "name": "pointerenter",
      "link": "/en-US/docs/Web/Events/pointerenter",
      "description": "This event is fired when when a pointing device is moved into the hit test boundaries of an element or one of its descendants, including as a result of a pointerdown event from a device that does not support hover (see pointerdown). This event type is similar to pointerover, but differs in that it does not bubble.",
      "parameters": [
        {
          "name": "Specification",
          "description": "Pointer Events"
        },
        {
          "name": "Interface",
          "description": "PointerEvent"
        },
        {
          "name": "Bubbles",
          "description": "No"
        },
        {
          "name": "Cancelable",
          "description": "No"
        },
        {
          "name": "Target",
          "description": "Document, Element"
        },
        {
          "name": "Default Action",
          "description": "Varies: When the pointer is primary, all default actions of mouseenter."
        }
      ]
    },
    {
      "name": "pointerdown",
      "link": "/en-US/docs/Web/Events/pointerdown",
      "description": "The event is fired when a pointer becomes active. For mouse, it is fired when the device transitions from no buttons depressed to at least one button depressed. For touch, it is fired when physical contact is made with the digitizer. For pen, it is fired when the stylus makes physical contact with the digitizer.",
      "parameters": [
        {
          "name": "Specification",
          "description": "Pointer Events"
        },
        {
          "name": "Interface",
          "description": "PointerEvent"
        },
        {
          "name": "Bubbles",
          "description": "Yes"
        },
        {
          "name": "Cancelable",
          "description": "Yes"
        },
        {
          "name": "Target",
          "description": "Document, Element"
        },
        {
          "name": "Default Action",
          "description": "Varies: When the pointer is primary, all default actions of the mousedown event."
        }
      ]
    },
    {
      "name": "pointermove",
      "link": "/en-US/docs/Web/Events/pointermove",
      "description": "This event is fired when a pointer changes coordinates.",
      "parameters": [
        {
          "name": "Specification",
          "description": "Pointer Events"
        },
        {
          "name": "Interface",
          "description": "PointerEvent"
        },
        {
          "name": "Bubbles",
          "description": "Yes"
        },
        {
          "name": "Cancelable",
          "description": "Yes"
        },
        {
          "name": "Target",
          "description": "Document, Element"
        },
        {
          "name": "Default Action",
          "description": "Varies: When the pointer is primary, all default actions of mousemove event."
        }
      ]
    },
    {
      "name": "pointerup",
      "link": "/en-US/docs/Web/Events/pointerup",
      "description": "This event is fired when a pointer is no longer active.",
      "parameters": [
        {
          "name": "Specification",
          "description": "Pointer Events"
        },
        {
          "name": "Interface",
          "description": "PointerEvent"
        },
        {
          "name": "Bubbles",
          "description": "Yes"
        },
        {
          "name": "Cancelable",
          "description": "Yes"
        },
        {
          "name": "Target",
          "description": "Document, Element"
        },
        {
          "name": "Default Action",
          "description": "Varies: When the pointer is primary, all default actions of mouseup event."
        }
      ]
    },
    {
      "name": "pointercancel",
      "link": "/en-US/docs/Web/Events/pointercancel",
      "description": "A browser fires this event if it concludes the pointer will no longer be able to generate events (for example the related device is deactived).",
      "parameters": [
        {
          "name": "Specification",
          "description": "Pointer Events"
        },
        {
          "name": "Interface",
          "description": "PointerEvent"
        },
        {
          "name": "Bubbles",
          "description": "Yes"
        },
        {
          "name": "Cancelable",
          "description": "No"
        },
        {
          "name": "Target",
          "description": "Document, Element"
        },
        {
          "name": "Default Action",
          "description": "None"
        }
      ]
    },
    {
      "name": "pointerout",
      "link": "/en-US/docs/Web/Events/pointerout",
      "description": "This event is fired for several reasons including: pointing device is moved out of the hit test boundaries of an element; firing the pointerup event for a device that does not support hover (see pointerup); after firing the pointercancel event (see pointercancel); when a pen stylus leaves the hover range detectable by the digitizer.",
      "parameters": [
        {
          "name": "Specification",
          "description": "Pointer Events"
        },
        {
          "name": "Interface",
          "description": "PointerEvent"
        },
        {
          "name": "Bubbles",
          "description": "Yes"
        },
        {
          "name": "Cancelable",
          "description": "Yes"
        },
        {
          "name": "Target",
          "description": "Document, Element"
        },
        {
          "name": "Default Action",
          "description": "Varies: when the pointer is primary, all default actions of mouseout"
        }
      ]
    },
    {
      "name": "pointerleave",
      "link": "/en-US/docs/Web/Events/pointerleave",
      "description": "This event is fired when a pointing device is moved out of the hit test boundaries of an element. For pen devices, this event is fired when the stylus leaves the hover range detectable by the digitizer.",
      "parameters": [
        {
          "name": "Specification",
          "description": "Pointer Events"
        },
        {
          "name": "Interface",
          "description": "PointerEvent"
        },
        {
          "name": "Bubbles",
          "description": "No"
        },
        {
          "name": "Cancelable",
          "description": "No"
        },
        {
          "name": "Target",
          "description": "Document, Element"
        },
        {
          "name": "Default Action",
          "description": "Varies: when the pointer is primary, all default actions of mouseleave"
        }
      ]
    },
    {
      "name": "gotpointercapture",
      "link": "/en-US/docs/Web/Events/gotpointercapture",
      "description": "This event is fired when an element receives pointer capture.",
      "parameters": [
        {
          "name": "Specification",
          "description": "Pointer Events"
        },
        {
          "name": "Interface",
          "description": "PointerEvent"
        },
        {
          "name": "Bubbles",
          "description": "No"
        },
        {
          "name": "Cancelable",
          "description": "No"
        },
        {
          "name": "Target",
          "description": "Document, Element"
        },
        {
          "name": "Default Action",
          "description": "None"
        }
      ]
    },
    {
      "name": "lostpointercapture",
      "link": "/en-US/docs/Web/Events/lostpointercapture",
      "description": "This event is fired after pointer capture is released for a pointer.",
      "parameters": [
        {
          "name": "Specification",
          "description": "Pointer Events"
        },
        {
          "name": "Interface",
          "description": "PointerEvent"
        },
        {
          "name": "Bubbles",
          "description": "No"
        },
        {
          "name": "Cancelable",
          "description": "No"
        },
        {
          "name": "Target",
          "description": "Document, Element"
        },
        {
          "name": "Default Action",
          "description": "None"
        }
      ]
    },
    {
      "name": "GlobalEventHandlers.onpointerover",
      "link": "/en-US/docs/Web/API/GlobalEventHandlers/onpointerover",
      "description": "A global event handler for the pointerover event.",
      "parameters": [
        {
          "name": "overHandler",
          "description": "The pointerover event handler for element targetElement."
        }
      ]
    },
    {
      "name": "GlobalEventHandlers.onpointerenter",
      "link": "/en-US/docs/Web/API/GlobalEventHandlers/onpointerenter",
      "description": "A global event handler for the pointerenter event.",
      "parameters": [
        {
          "name": "enterHandler",
          "description": "The pointerenter event handler for element targetElement."
        }
      ]
    },
    {
      "name": "GlobalEventHandlers.onpointerdown",
      "link": "/en-US/docs/Web/API/GlobalEventHandlers/onpointerdown",
      "description": "A global event handler for the pointerdown event.",
      "parameters": [
        {
          "name": "downHandler",
          "description": "The pointerdown event handler for element targetElement."
        }
      ]
    },
    {
      "name": "GlobalEventHandlers.onpointermove",
      "link": "/en-US/docs/Web/API/GlobalEventHandlers/onpointermove",
      "description": "A global event handler for the pointermove event.",
      "parameters": [
        {
          "name": "moveHandler",
          "description": "The pointermove event handler for element targetElement."
        }
      ]
    },
    {
      "name": "GlobalEventHandlers.onpointerup",
      "link": "/en-US/docs/Web/API/GlobalEventHandlers/onpointerup",
      "description": "A global event handler for the pointerup event.",
      "parameters": [
        {
          "name": "upHandler",
          "description": "The pointerup event handler for element targetElement."
        }
      ]
    },
    {
      "name": "GlobalEventHandlers.onpointercancel",
      "link": "/en-US/docs/Web/API/GlobalEventHandlers/onpointercancel",
      "description": "A global event handler for the pointercancel event.",
      "parameters": [
        {
          "name": "cancelHandler",
          "description": "The pointercancel event handler for element targetElement."
        }
      ]
    },
    {
      "name": "GlobalEventHandlers.onpointerout",
      "link": "/en-US/docs/Web/API/GlobalEventHandlers/onpointerout",
      "description": "A global event handler for the pointerout event.",
      "parameters": [
        {
          "name": "outHandler",
          "description": "The pointerout event handler for element targetElement."
        }
      ]
    },
    {
      "name": "GlobalEventHandlers.onpointerleave",
      "link": "/en-US/docs/Web/API/GlobalEventHandlers/onpointerleave",
      "description": "A global event handler for the pointerleave event.",
      "parameters": [
        {
          "name": "leaveHandler",
          "description": "The EventListener which will be invoked to handle pointerleave events sent to the target."
        }
      ]
    }
  ]
}