{
  "name": "IntersectionObserver",
  "description": "This is an experimental technology Because this technology\u0027s specification has not stabilized, check the compatibility table for usage in various browsers. Also note that the syntax and behavior of an experimental technology is subject to change in future versions of browsers as the specification changes. The IntersectionObserver interface of the Intersection Observer API provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document\u0027s viewport. The ancestor element or viewport is referred to as the root.",
  "members": [
    {
      "name": "IntersectionObserver.IntersectionObserver()",
      "link": "/en-US/docs/Web/API/IntersectionObserver/IntersectionObserver",
      "description": "Creates a new IntersectionObserver object which will execute a specified callback function when it detects that a target element\u0027s visibility has crossed one or more thresholds.",
      "parameters": [
        {
          "name": "callback",
          "description": "A function which is called when the percentage of the target element is visible crosses a threshold. The callback receives as input two parameters: entries A list of IntersectionObserverEntry objects, each representing one threshold which was crossed, either becoming more or less visible than the percentage specified by that threshold. observer The IntersectionObserver for which the callback is being invoked."
        },
        {
          "name": "entries",
          "description": "A list of IntersectionObserverEntry objects, each representing one threshold which was crossed, either becoming more or less visible than the percentage specified by that threshold."
        },
        {
          "name": "observer",
          "description": "The IntersectionObserver for which the callback is being invoked."
        },
        {
          "name": "options Optional",
          "description": "An optional object which customizes the observer. If options isn\u0027t specified, the observer uses the document\u0027s viewport as the root, with no margin, and a 0% threshold (meaning that even a one-pixel change is enough to trigger a callback). You can provide any combination of the following options: root An Element object which is an ancestor of the intended target, whose bounding rectangle will be considered the viewport. Any part of the target not visible in the visible area of the root is not considered visible. rootMargin A string which specifies a set of offsets to add to the root\u0027s bounding_box when calculating intersections, effectively shrinking or growing the root for calculation purposes. The syntax is approximately the same as that for the CSS margin property; see \"The root element and root margin\" in Intersection Observer API for more information on how the margin works and the syntax. The default is \"0px 0px 0px 0px\". threshold Either a single number or an array of numbers between 0.0 and 1.0, specifying a ratio of intersection area to total bounding box area for the observed target. A value of 0.0 means that even a single visible pixel counts as the target being visible. 1.0 means that the entire target element is visible. See \"Thresholds\" in Intersection Observer API for a more in-depth description of how thresholds are used. The default is a threshold of 0.0."
        },
        {
          "name": "root",
          "description": "An Element object which is an ancestor of the intended target, whose bounding rectangle will be considered the viewport. Any part of the target not visible in the visible area of the root is not considered visible."
        },
        {
          "name": "rootMargin",
          "description": "A string which specifies a set of offsets to add to the root\u0027s bounding_box when calculating intersections, effectively shrinking or growing the root for calculation purposes. The syntax is approximately the same as that for the CSS margin property; see \"The root element and root margin\" in Intersection Observer API for more information on how the margin works and the syntax. The default is \"0px 0px 0px 0px\"."
        },
        {
          "name": "threshold",
          "description": "Either a single number or an array of numbers between 0.0 and 1.0, specifying a ratio of intersection area to total bounding box area for the observed target. A value of 0.0 means that even a single visible pixel counts as the target being visible. 1.0 means that the entire target element is visible. See \"Thresholds\" in Intersection Observer API for a more in-depth description of how thresholds are used. The default is a threshold of 0.0."
        },
        {
          "name": "SyntaxError",
          "description": "The specified rootMargin is invalid."
        },
        {
          "name": "RangeError",
          "description": "One or more of the values in threshold is outside the range 0.0 to 1.0."
        }
      ]
    },
    {
      "name": "IntersectionObserver.root",
      "link": "/en-US/docs/Web/API/IntersectionObserver/root",
      "description": "A specific ancestor of the target element being observed. If no value was passed to the constructor or this is null, the top-level document\u0027s viewport is used."
    },
    {
      "name": "IntersectionObserver.rootMargin",
      "link": "/en-US/docs/Web/API/IntersectionObserver/rootMargin",
      "description": "An offset rectangle applied to the root\u0027s bounding box when calculating intersections, effectively shrinking or growing the root for calculation purposes. The value returned by this property may not be the same as the one specified when calling the constructor as it may be changed to match internal requirements. Each offset can be expressed in pixels (px) or as a percentage (%). The default is \"0px 0px 0px 0px\"."
    },
    {
      "name": "IntersectionObserver.thresholds",
      "link": "/en-US/docs/Web/API/IntersectionObserver/thresholds",
      "description": "A list of thresholds, sorted in increasing numeric order, where each threshold is a ratio of intersection area to bounding box area of an observed target. Notifications for a target are generated when any of the thresholds are crossed for that target. If no value was passed to the constructor, 0 is used."
    },
    {
      "name": "IntersectionObserver.disconnect()",
      "link": "/en-US/docs/Web/API/IntersectionObserver/disconnect",
      "description": "Stops the IntersectionObserver object from observing any target."
    },
    {
      "name": "IntersectionObserver.observe()",
      "link": "/en-US/docs/Web/API/IntersectionObserver/observe",
      "description": "Tells the IntersectionObserver a target element to observe.",
      "parameters": [
        {
          "name": "targetElement",
          "description": "An element whose visibility within the root is to be monitored. This element must be a descendant of the root element (or contained wtihin the current document, if the root is the document\u0027s viewport)."
        }
      ]
    },
    {
      "name": "IntersectionObserver.takeRecords()",
      "link": "/en-US/docs/Web/API/IntersectionObserver/takeRecords",
      "description": "Returns an array of IntersectionObserverEntry objects for all observed targets and stops observing all of them."
    },
    {
      "name": "IntersectionObserver.unobserve()",
      "link": "/en-US/docs/Web/API/IntersectionObserver/unobserve",
      "description": "Tells the IntersectionObserver to stop observing a particular target element.",
      "parameters": [
        {
          "name": "target",
          "description": "The Element to cease observing. If the specified element isn\u0027t being observed, this method does nothing and no exception is thrown."
        }
      ]
    }
  ]
}