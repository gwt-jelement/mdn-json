{
  "name": "HTMLFormElement",
  "description": "The HTMLFormElement interface provides methods to create and modify \u003cform\u003e elements.",
  "members": [
    {
      "name": "HTMLFormElement.elements",
      "link": "/en-US/docs/Web/API/HTMLFormElement/elements",
      "description": "A HTMLFormControlsCollection holding all form controls belonging to this form element."
    },
    {
      "name": "HTMLFormElement.length",
      "link": "/en-US/docs/Web/API/HTMLFormElement/length",
      "description": "A long reflecting  the number of controls in the form."
    },
    {
      "name": "HTMLFormElement.name",
      "link": "/en-US/docs/Web/API/HTMLFormElement/name",
      "description": "A DOMString reflecting the value of the form\u0027s name HTML attribute, containing the name of the form."
    },
    {
      "name": "HTMLFormElement.method",
      "link": "/en-US/docs/Web/API/HTMLFormElement/method",
      "description": "A DOMString reflecting the value of the form\u0027s method HTML attribute, indicating the HTTP method used to submit the form. Only specified values can be set."
    },
    {
      "name": "HTMLFormElement.target",
      "link": "/en-US/docs/Web/API/HTMLFormElement/target",
      "description": "A DOMString reflecting the value of the form\u0027s target HTML attribute, indicating where to display the results received from submitting the form."
    },
    {
      "name": "HTMLFormElement.action",
      "link": "/en-US/docs/Web/API/HTMLFormElement/action",
      "description": "A DOMString reflecting the value of the form\u0027s action HTML attribute, containing the URI of a program that processes the information submitted by the form."
    },
    {
      "name": "HTMLFormElement.encoding",
      "link": "/en-US/docs/Web/API/HTMLFormElement/encoding",
      "description": "A DOMString reflecting the value of the form\u0027s enctype HTML attribute, indicating the type of content that is used to transmit the form to the server. Only specified values can be set. The two methods are synonyms."
    },
    {
      "name": "HTMLFormElement.acceptCharset",
      "link": "/en-US/docs/Web/API/HTMLFormElement/acceptCharset",
      "description": "A DOMString reflecting the value of the form\u0027s accept-charset HTML attribute, representing the character encoding that the server accepts."
    },
    {
      "name": "HTMLFormElement.autocomplete",
      "link": "/en-US/docs/Web/API/HTMLFormElement/autocomplete",
      "description": "A DOMString reflecting the value of the form\u0027s autocomplete HTML attribute, indicating whether the controls in this form can have their values automatically populated by the browser."
    },
    {
      "name": "HTMLFormElement.noValidate",
      "link": "/en-US/docs/Web/API/HTMLFormElement/noValidate",
      "description": "A Boolean reflecting the value of the form\u0027s  novalidate HTML attribute, indicating whether the form should not be validated."
    },
    {
      "name": "HTMLFormElement.submit()",
      "link": "/en-US/docs/Web/API/HTMLFormElement/submit",
      "description": "Submits the form to the server."
    },
    {
      "name": "HTMLFormElement.reset()",
      "link": "/en-US/docs/Web/API/HTMLFormElement/reset",
      "description": "Resets the form to its initial state."
    },
    {
      "name": "HTMLFormElement.checkValidity()",
      "link": "/en-US/docs/Web/API/HTMLFormElement/checkValidity",
      "description": "Returns true if the element\u0027s child controls are subject to constraint validation and satisfy those contraints; returns false if some controls do not satisfy their constraints. Fires an event named invalid at any control that does not satisfy its constraints; such controls are considered invalid if the event is not canceled. It is up to the programmer to decide how to respond to false."
    },
    {
      "name": "HTMLFormElement.reportValidity()",
      "link": "/en-US/docs/Web/API/HTMLFormElement/reportValidity",
      "description": "Returns true if the element\u0027s child controls satisfy their validation constraints. When false is returned, cancelable invalid events are fired for each invalid child and validation problems are reported to the user."
    },
    {
      "name": "HTMLFormElement.requestAutocomplete()",
      "link": "/en-US/docs/Web/API/HTMLFormElement/requestAutocomplete",
      "description": "Triggers a native browser interface to assist the user in completing the fields which have an autofill field name value that is not off or on. The form will receive an event once the user has finished with the interface, the event will either be autocomplete when the fields have been filled or autocompleteerror when there was a problem. This method has been removed from Chrome and Firefox — see bug 1270740 for background information on why."
    }
  ]
}