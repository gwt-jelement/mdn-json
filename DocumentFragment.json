{
  "name": "DocumentFragment",
  "description": "The DocumentFragment interface represents a minimal document object that has no parent. It is used as a lightweight version of Document that stores a segment of a document structure comprised of nodes just like a standard document. The key difference is that because the document fragment isn\u0027t part of the active document tree structure, changes made to the fragment don\u0027t affect the document, cause reflow, or incur any performance impact that can occur when changes are made.",
  "members": [
    {
      "name": "ParentNode.children",
      "link": "/en-US/docs/Web/API/ParentNode/children",
      "description": "Returns a live HTMLCollection containing all objects of type Element that are children of the DocumentFragment object."
    },
    {
      "name": "ParentNode.firstElementChild",
      "link": "/en-US/docs/Web/API/ParentNode/firstElementChild",
      "description": "Returns the Element that is the first child of the DocumentFragment object, or null if there is none."
    },
    {
      "name": "ParentNode.lastElementChild",
      "link": "/en-US/docs/Web/API/ParentNode/lastElementChild",
      "description": "Returns the Element that is the last child of the DocumentFragment object, or null if there is none."
    },
    {
      "name": "ParentNode.childElementCount",
      "link": "/en-US/docs/Web/API/ParentNode/childElementCount",
      "description": "Returns an unsigned long giving the amount of children that the DocumentFragment has.",
      "parameters": [
        {
          "name": "count",
          "description": "holds the return value an unsigned long (simply an integer) type."
        },
        {
          "name": "node",
          "description": "is an object representing a Document, DocumentFragment or Element."
        }
      ]
    },
    {
      "name": "DocumentFragment()",
      "link": "/en-US/docs/Web/API/DocumentFragment/DocumentFragment",
      "description": "Returns an empty DocumentFragment object."
    },
    {
      "name": "DocumentFragment.find()",
      "link": "/en-US/docs/Web/API/DocumentFragment/find",
      "description": "Returns the first matching Element in the tree of the DocumentFragment."
    },
    {
      "name": "DocumentFragment.findAll()",
      "link": "/en-US/docs/Web/API/DocumentFragment/findAll",
      "description": "Returns a NodeList of matching Element in the tree of the DocumentFragment."
    },
    {
      "name": "DocumentFragment.querySelector()",
      "link": "/en-US/docs/Web/API/DocumentFragment/querySelector",
      "description": "Returns the first Element node within the DocumentFragment, in document order, that matches the specified selectors.",
      "parameters": [
        {
          "name": "selectors",
          "description": "Is a DOMString containing one or more CSS selectors separated by commas."
        }
      ]
    },
    {
      "name": "DocumentFragment.querySelectorAll()",
      "link": "/en-US/docs/Web/API/DocumentFragment/querySelectorAll",
      "description": "Returns a NodeList of all the Element nodes within the DocumentFragment that match the specified selectors.",
      "parameters": [
        {
          "name": "selectors",
          "description": "Is a DOMString containing one or more CSS selectors separated by commas."
        }
      ]
    },
    {
      "name": "DocumentFragment.getElementById()",
      "link": "/en-US/docs/Web/API/DocumentFragment/getElementById",
      "description": "Returns the first Element node within the DocumentFragment, in document order, that matches the specified ID."
    }
  ]
}